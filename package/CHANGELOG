0.1.10 -> 0.2.0

- Added Rating and Hardware requirements (AppStream)
- Added CBZ instruction
- Added CBNZ instruction
- Added CLZ instruction
- Improved instructions system (complete overhaul)
- Improved icons and showcase medias
- Improved i18n (French)
- Improved logging formatting
- Fixed layout on desktop
- Fixed Regex Parser invalid statement detection


0.1.9 -> 0.1.10

- Added ADR instruction
- Added BFC instruction
- Added BFI instruction
- Added BKPT instruction
- Added BLX instruction
- Added shortcuts and shortcut hints
- Added code and manual breakpoint settings
- Added i18n (English and French)
- Added notification tray length settings
- Improved Linux execution script (discovering and selecting JRE version)
- Improved Syntax error message (specify file in most of the cases)
- Fixed Legacy Parser skipping incorrect instructions when it should send a notification
- Fixed Step Over task GUI (buttons stayed enabled)


0.1.8 -> 0.1.9

- Added more screenshots in the MetaInfos
- Added line marking when double-clicking in labels
- Fixed Flatpak version poor performances (allowing OpenGL)
- Fixed line marking disappearing when the PC does not move
- Fixed Step Over task (skipped an instruction)
- Adjusted the default simulation interval to prevent front-end bugs


0.1.7 -> 0.1.8

- Added layout preferences saving
- Added editor tabs reordering
- Modified change highlighting (no more fading)
- Modified Step Over task (based on nesting count)
- Fixed label verifying process
- Fixed global accessibility
- Fixed exception throwing when launching non-saved file
- Fixed symbols address setting (did not change all symbols addresses)


0.1.6 -> 0.1.7

- Added new splash screens
- Added support for multi-files projects
- Added instruction address in editors margins
- Added symbol and labels observation tab
- Added memory summary observation tab
- Added stack pointer following setting
- Added value update indicator
- Fixed memory, stack and register tabs unavailability when not simulating
- Fixed simulation speed setting changeability when simulating
- Optimized line marking
- Reduced simulation interval lower threshold


0.1.5 -> 0.1.6

- Fixed stack entry sync with current simulation data
- Fixed unread instruction when placed in the same line as a label
- Added menu (in View) to control memory columns visibility
- Fixed cross-platform compatibility
- Added Chocolatey packaging


0.1.4 -> 0.1.5

- Fixed a bug that prevented updating registers used in STR or LDR instructions
- Fixed a bug where you could only use in the stack the first 10 registers
- Fixed a bug that prevented declaring structures in a structure
- Refactored CodeInterpreter to completely use PC
- Fixed wrong memory management (Big to Little endian)
- Added ASCII column in memory viewing table
- Fixed Stack address and Symbol address settings (enabled during simulation)
- Fixed transparent line numbers in editor


0.1.3 -> 0.1.4

- Fixed directives in BSS not being executed
- Enhanced CPSR/SPSR flag visibility
- Fixed memory search (GUI not updated when searched a address located on another page)
- Changed notifications format
- Added FlatPaks
- Added launching command ($jarmemu)
- Fixed char parsing error (deleting whitespaces)


0.1.2 -> 0.1.3

- ASR carry flag improved yet again (didn't work for positive values)
- Convert MOV instruction to SHIFT instruction (in the backend only) for better use of update flags
- Fixed a bug that prevented the leftest text of editor to be selected with mouse
- Fixed Regex parser arguments parsing (strip whitespaces)
- Added two new themes (Nord & Cupertino)
- Reworked data viewing (Registers, Stack, Memory)
- Added dynamic settings
- Added automatic breakpoints
- Fixed new file saving


0.1.1 -> 0.1.2

- Fixed character parsing
- Fixed unresponsive app bug due to inexistant save file
- Optimized concurrent management (using bound properties instead of direct assignation)
- Fixed unrefreshed screen bug
- Added global directive logic (actually usable now)
- Fixed the stack auto-scrolling for non-HDPI screens
- Added Fill directive
- Added AtlantaFx theme (instead of JavaFx Moderna with a bit of BootstrapFx)
- Added support for Dark & Light themes
- Legacy Parser now works when selected in the drop down menu (its use is still not recommended nonetheless)
- RRX as an instruction is now fully supported
- S condition now update all flags on ROR instruction
- ASR carry flag should now work correctly
- Enhanced settings menu