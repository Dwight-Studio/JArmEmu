#
#            ____           _       __    __     _____ __            ___
#           / __ \_      __(_)___ _/ /_  / /_   / ___// /___  ______/ (_)___
#          / / / / | /| / / / __ `/ __ \/ __/   \__ \/ __/ / / / __  / / __ \
#         / /_/ /| |/ |/ / / /_/ / / / / /_    ___/ / /_/ /_/ / /_/ / / /_/ /
#        /_____/ |__/|__/_/\__, /_/ /_/\__/   /____/\__/\__,_/\__,_/_/\____/
#                         /____/
#     Copyright (C) 2024 Dwight Studio
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

#### Menus ####
# File
menu.file.title=Fichier
menu.file.newFile=Nouveau fichier
menu.file.open=Ouvrir...
menu.file.saveAll=Tout enregistrer
menu.file.save=Enregistrer
menu.file.saveAs=Enregistrer sous...
menu.file.reloadAll=Tout recharger
menu.file.reload=Recharger
menu.file.closeAll=Tout fermer
menu.file.close=Fermer
menu.file.reset=Réinitialiser les paramètres
menu.file.exit=Quitter
menu.file.saveSourceFile=Enregistrer le fichier source
menu.file.openSourceFile=Ouvrir un fichier source
menu.file.formatName=Fichier Source Assembleur

# Edit
menu.edit.title=Édition
menu.edit.copy=Copier
menu.edit.cut=Couper
menu.edit.paste=Coller
menu.edit.delete=Supprimer
menu.edit.findAndReplace=Chercher & Remplacer
menu.edit.breakpoint=Basculer le Point d'arrêt

# Simulation
menu.simulation.title=Simulation
menu.simulation.simulate=Simuler
menu.simulation.stepInto=Pas à pas détaillé
menu.simulation.stepOver=Pas à pas principal
menu.simulation.continue=Continuer
menu.simulation.pause=Pause
menu.simulation.stop=Stop
menu.simulation.restart=Redémarrer

# View
menu.view.title=Affichage
menu.view.clearNotifs=Effacer les notifications

# Help
menu.help.title=Aide
menu.help.instructionList=Voir les Instructions...
menu.help.about=À propos...


#### Tabs ####
# Registers
tab.registers.title=Registres
tab.registers.register=Registre
tab.registers.value=Valeur
tab.registers.flags=Drapeaux

# Stack
tab.stack.title=Pile
tab.stack.address=Adresse
tab.stack.value=Valeur

# Symbols
tab.symbols.title=Symboles
tab.symbols.file=Fichier
tab.symbols.name=Nom
tab.symbols.value=Valeur

# Labels
tab.labels.title=Étiquettes
tab.labels.file=Fichier
tab.labels.name=Nom
tab.labels.address=Adresse

# Memory Details
tab.memoryDetails.title=Détails de la mémoire
tab.memoryDetails.search=Aller à l'adresse
tab.memoryDetails.address=Adresse
tab.memoryDetails.value=Valeur
tab.memoryDetails.byte=Octet %d

# Memory Overview
tab.memoryOverview.title=Aperçu de la mémoire
tab.memoryOverview.search=Aller à l'adresse
tab.memoryOverview.address=Adresse
tab.memoryOverview.value=Valeur %d


#### Settings ####
tab.settings.title=Paramètres

# Editor
settings.editor.title=Éditeur
settings.editor.realTimeParser=Analyseur en Temps Réel
settings.editor.autoCompletion=Auto-complétion Intelligente

# Simulation
settings.simulation.title=Simulation
settings.simulation.interval=Intervalle de simulation (ms)
settings.simulation.parser=Analyseur de source
settings.simulation.notImplemented=Ignorer les instructions non implémentées
settings.simulation.deprecated=Ignorer les instructions dépréciées

# Automatic breakpoints
settings.breakpoints.title=Points d'arrêt
settings.breakpoints.manualBreakpoints=Points d'arrêt manuels
settings.breakpoints.codeBreakpoints=Points d'arrêt du code
settings.breakpoints.autoBreakpoints=Points d'arrêt automatiques
settings.breakpoints.memoryAlign=Accès à la mémoire mal aligné
settings.breakpoints.stackAlign=Pointeur de la pile désaligné
settings.breakpoints.programAlign=Compteur de programme mal aligné
settings.breakpoints.nesting=Récursivité trop profonde
settings.breakpoints.readOnly=Écrasement de données en lecture seule

# Data management
settings.dataManagement.title=Gestion des données
settings.dataManagement.stackAddress=Adresse de la pile (Hex)
settings.dataManagement.programAddress=Adresse du program (Hex)
settings.dataManagement.dataFormat=Format d'affichage des données
settings.dataManagement.hexadecimal=Héxadécimal (par défaut)
settings.dataManagement.signedDecimal=Décimal Signé
settings.dataManagement.unsignedDecimal=Décimal Non Signé
settings.dataManagement.follow=Suivre SP dans la pile
settings.dataManagement.highlight=Surligner les mises à jour

# Appearance
settings.appearance.title=Apparence
settings.appearance.themeFamily=Famille thématique
settings.appearance.themeVariation=Variation du thème
settings.appearance.dark=Sombre
settings.appearance.light=Clair
settings.appearance.maxNotification=Nombre max de notifications


#### Pop ####

# Memory hint
pop.memoryHint.title=Recherche dans la mémoire
pop.memoryHint.message=Vous pouvez chercher dans la mémoire en utilisant plusieurs formats d'adresses :\n\t%1$s Nombre signé décimal (e.g. -1842)\n\t%1$s Nombre héxadécimal (e.g. 0x01FF)\n\t%1$s Nombre binaire (e.g. 0b1001)\n\t%1$s Constante définie (e.g N)\n\t%1$s Donnée définie (e.g. data1)\n\t%1$s Expression mathématique (e.g (N*4)+0xFF)

# Autocompletion
pop.autocomplete.title=Smart Autocompletion

# Find & Replace
pop.find.find=Trouver
pop.find.replace=Remplacer
pop.find.replaceAll=Tout Remplacer
pop.find.caseSensitivity=Correspondance de la Casse
pop.find.word=Mots
pop.find.regex=Expressions Régulières


#### Notifications ####

# Parsing
notification.parsing.title=Analyse du code en cours...
notification.parsing.message=Merci de patienter, cela peut prendre quelques secondes.

# Parsing error
notification.parsingError.title=Erreur lors de l'analyse du code
notification.parsingError.message=Des erreurs ont empêché le code d'être analysé correctement. Regardez la console pour plus de détails.

# No instruction error
notification.noInstruction.title=Erreur lors de la simulation
notification.noInstruction.message=Aucune instruction détectée (avez-vous oublié le '.text' ?).

# Exception in code
notification.exception.fileAndLine=%s à la ligne %d (%s)
notification.exception.line=%s à la ligne %d (Fichier inconnu)
notification.exception.nothing=%s

# Automatic breakpoint
notification.autoBreakpoint.title=Point d'arrêt automatique
notification.autoBreakpoint.message=Vous pouvez désactiver les points d'arrêts automatiques dans les paramètres.

# Simulator breakpoint
notification.simulatorBreakpoint.title=Le simulateur a requis un point d'arrêt
notification.simulatorBreakpoint.memoryAccessMessage=Tentative d'accès à une adresse mémoire mal aligné.
notification.simulatorBreakpoint.readOnlyMessage=Écrasement de données en lecture seule.
notification.simulatorBreakpoint.programCounterMessage=Compteur de programme mal aligné.
notification.simulatorBreakpoint.stackPointerMessage=Pointeur de la pile désaligné.
notification.simulatorBreakpoint.nestingMessage=Récursivité trop profonde (>1000 branches).

# Software interrupt
notification.softwareInterrupt.title=Interruption logiciel
notification.softwareInterrupt.message=Le programme a requis une interruption avec le code %s.

# Catch point
notification.catchPoint.title=Terminé
notification.catchPoint.message=Le programme a atteint un point de capture.

# End of file
notification.eof.title=Terminé
notification.eof.message=Le programme a atteint la fin du fichier.

# Manual breakpoint
notification.manualBreakpoint.title=Point d'arrêt
notification.manualBreakpoint.message=Le programme a atteint un point d'arrêt, son exécution est en pause.

# Ignored manual breakpoint
notification.ignoredManualBreakpoint.title=Point d'arrêt
notification.ignoredManualBreakpoint.message=Le programme a atteint un point d'arrêt, mais a été ignoré par les paramètres actuels.

# Code breakpoint
notification.codeBreakpoint.title=Le code a requis un point d'arrêt
notification.codeBreakpoint.message=Avec la valeur %d.

# Ignored code breakpoint
notification.ignoredCodeBreakpoint.title=Le code a requis un point d'arrêt
notification.ignoredCodeBreakpoint.message=Avec la valeur %d, mais a été ignoré par les paramètres actuels.

# Outdated client
notification.outdated.title=Client obsolète (v%s -> v%s)
notification.outdated.message=Une nouvelle version de JArmEmu est disponible ! Mettez à jour dès maintenant pour profiter de toutes les nouvelles fonctionnalités.
notification.outdated.download=Télécharger
notification.outdated.dontShowAgain=Ne pas me le rappeler


#### Exceptions ####
exception.base=Erreur
exception.syntax=Erreur de syntaxe
exception.argument=Mauvais argument
exception.notImplemented=Non implémenté
exception.deprecated=Déprécation

exception.argument.unexpectedArgument=Argument '%s' inattendu
exception.argument.missingRegister=Registre manquant
exception.argument.unknownRegister=Registre '%s' inconnu
exception.argument.invalidRegister=Registre '%s' invalide
exception.argument.overflowingValue=Valeur immédiate de 12bits '%s' débordante
exception.argument.illegalPseudo=Utilisation illégale de Pseudo-Instruction '%s'
exception.argument.unprocessedPseudo=Détection d'une Pseudo-Instruction non traitée
exception.argument.invalidValue=Valeur immédiate de 12bits '%s' invalide
exception.argument.missingValue=Valeur immédiate manquante (12bits)
exception.argument.overflowingRotatedValue=Valeur immédiate pivotée de 8bits '%s' débordante
exception.argument.invalidRotatedValue=Valeur immédiate pivotée de 8bits '%s' invalide
exception.argument.missingRotatedValue=Valeur immédiate manquante (8bits pivotée)
exception.argument.shift0to31=Valeur de décalage '%s' invalide, la valeur doit être comprise entre 0 et 31 inclus
exception.argument.shift1to32=Valeur de décalage '%s' invalide, la valeur doit être comprise entre 1 et 32 inclus
exception.argument.shift1to31=Valeur de décalage '%s' invalide, la valeur doit être comprise entre 1 et 31 inclus
exception.argument.invalidShift=Valeur de décalage '%s' invalide
exception.argument.missingRegisterAddress=Adresse (depuis un registre) manquante
exception.argument.invalidAddressRegister=Adresse (depuis un registre) '%s' invalide
exception.argument.missingLabel=Identifieur de label ou valeur immédiate manquant
exception.argument.unknownLabel=Label '%s' inconnu (est-ce défini dans ce fichier?) ou expression mathématique malformée (%s)
exception.argument.missingRegisterArray=Liste de registre manquante
exception.argument.unexpectedArgumentRegisterArray=Valeur '%s' inattendu (liste de registre attendue)
exception.argument.emptyArgumentRegisterArray=Liste de registres '%s' invalide
exception.argument.overflowArgumentRegisterArray=Liste de registres '%s' débordante
exception.argument.invalidAddress=Adresse '%s' invalide
exception.argument.missingAddress=Adresse manquante
exception.argument.registerShift=Impossible d'effectuer le shift sur une valeur immédiate
exception.argument.missingRegisterOrImmediate=Registre ou valeur immédiate manquante
exception.argument.missingRegisterOrRotated=Registre ou valeur immédiate manquante (8bits pivotée)
exception.argument.missingShift=Décalage manquant

exception.instruction.firstArgBF=Le premier argument doit être compris entre 0 et 31 (inclus)
exception.instruction.secondArgBF=Le second argument doit être compris entre 0 et 32 moins le premier argument (inclus)
exception.instruction.illegalSFlag=Utilisation interdite du drapeau S flag (non utilisable avec cette instruction)
exception.instruction.labelAlreadyDefined=Label '%s' déjà défini
exception.instruction.deprecated=L'instruction %s est obsolète
exception.instruction.notImplemented=L'instruction %s n'est pas (encore) implémentée
exception.instruction.coprocessor=Les instructions utilisant les coprocesseurs ne sont pas implémentées
exception.instruction.wrongVersion=%s n'est pas disponible pour ARMv7
exception.instruction.missingUpdateMode=Mode de mise à jour manquant
exception.instruction.debug=DBG s'exécute comme NOP
exception.instruction.indexing=La pré-indexation et la post-indexation ne sont pas cumulables
exception.instruction.halfword=Le modifier H n'est pas disponible pour cette instruction

exception.directive.illegalDataInitialization=Initialisation illégale de données (%s dans %s)
exception.directive.invalidArgument=Argument '%s' invalide (pour %s)
exception.directive.overflowingByteValue=Valeur d'octet '%s' débordante
exception.directive.overflowingHalfValue=Valeur de demi-mot '%s' débordante
exception.directive.invalidSymbolName=Nom de symbole '%s' invalide
exception.directive.invalidValueSize=Taille de la valeur '%s' invalide (doit être positive)

exception.parser.unexpectedStatement=Déclaration '%s' inattendue
exception.parser.unknownSection=Section '%s' inconnue
exception.parser.unknownDirective=Directive '%s' inconnue
exception.parser.unknownInstruction=Instruction '%s' inconnue
exception.parser.unknownModifier=Modificateur '%s' inconnu (%s attendu)
exception.parser.unexpectedModifier=Modificateur '%s' inattendu

exception.math.malformed=Expression mathématique '%s' malformée (%s)


#### Status ####
status.initializing=Initialisation
status.editing=Édition
status.simulating=Simulation
status.error=Erreur


#### Dialogs  ####

# Warning
dialog.warning.title=Attention
dialog.warning.confirm=Confirmer

# Unsaved
dialog.unsaved.title=Attention
dialog.unsaved.message=Le fichier ouvert contient des modifications non enregistrées. Ces modifications seront perdues si vous continuez sans enregistrer.\n\nVoulez-vous enregistrer le fichier ?
dialog.unsaved.save=Sauvegarder et continuer
dialog.unsaved.discard=Ignorer et continuer
dialog.unsaved.cancel=Annuler

# Simulation interval warning
dialog.simulationInterval.message=Le réglage de l'intervalle de simulation en dessous de %dms désactive la mise à jour systématique de l'interface graphique afin d'éviter les problèmes avec le front-end. Il est possible que des étapes soient sautées (il s'agit d'un simple effet visuel, le back-end fonctionnant toujours comme d'habitude).

# Disable notification warning
dialog.maxNotification.message=Le réglage du nombre max de notification sur zéro désactive les notifications. Nous vous recommandons vivement de l'activer pour utiliser correctement le simulateur et déboguer correctement votre code.

#### About ####

# Website
about.website.title=Site internet

# Licence
about.licence.title=License

# Credits
about.credits.title=Crédits
about.credits.message=JArmEmu est un projet du collectif Dwight Studio.\nDirigé par Tollemer Kévin et Leconte Alexandre.\n\nJArmEmu se base sur le travail des projets suivants :\nJavafx par OpenJFX (GNU Public License)\nIkonli par Andres Almiray (Apache License 2.0)\nRichTextFX par Tomas Mikula (BSD 2-Clause "Simplified" License)\nAtlantaFX par mkpaz (MIT License)

#### Instruction List ####

instructionList.title=Instructions implémentées

# Table
instructionList.table.name=Nom
instructionList.table.usage=Utilisation

# Detail
instructionList.detail.title=%s en détails

# Instruction
instructionList.description.add=Additionne (sans retenue) la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) au contenu de reg1 et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.add=ADD R7, R2n\nADD R9, R7, R2, LSL #2
instructionList.description.sub=Soustrait (sans retenue) la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) au contenu de reg1 et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.sub=SUB R9, R7, R2\nSUB R7, R2, LSL R1
instructionList.description.rsb=Soustrait (sans retenue) le contenu de reg1 à la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.rsb=RSB R7, R2\nRSB R9, R7, R2, LSL #2
instructionList.description.adc=Additionne (avec retenue) la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) au contenu de reg1 et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.adc=ADC R9, R7, R2\nADC R7, R2, LSL R3
instructionList.description.sbc=Soustrait (avec retenue) la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) au contenu de reg1 et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.sbc=SBC R9, R7, R2\nSBC R7, R2, LSL #2
instructionList.description.rsc=Soustrait (avec retenue) le contenu de reg1 à la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.rsc=RSC R7, R2\nRSC R9, R7, R2, LSL R1
instructionList.description.mul=Multiplie le contenu de reg1 par le contenu de reg2 et stocke les 32 bits les moins significatifs du résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.mul=MUL R7, R2\nMUL R9, R7, R2
instructionList.description.mla=Multiplie le contenu de reg1 par le contenu de reg2, ajoute la valeur de reg3 et stocke les 32 bits les moins significatifs du résultat dans reg0.
instructionList.example.mla=MLA R9, R7, R2, R3
instructionList.description.mls=Multiplie le contenu de reg1 par le contenu de reg2, soustrait le résultat du contenu de reg3 et stocke les 32 bits les moins significatifs du résultat dans reg0.
instructionList.example.mls=MLS R4, R5, R8, R9
instructionList.description.umull=Multiplie le contenu (non signé) de reg2 par le contenu (non signé) de reg3 et stocke les 32 bits les moins significatifs du résultat dans reg0 et les 32 bits les plus significatifs dans reg1.
instructionList.example.umull=UMULL R0, R4, R5, R7
instructionList.description.umlal=Multiplie le contenu (non signé) de reg2 par le contenu (non signé) de reg3 et l'ajoute au contenu (non signé) de reg0 et reg1 où les 32 bits les moins significatifs sont stockés dans reg0 et les 32 bits les plus significatifs sont stockés dans reg1.
instructionList.example.umlal=UMLAL R1, R8, R5, R9
instructionList.description.smull=Multiplie le contenu (signé) de reg2 par le contenu (signé) de reg3 et stocke les 32 bits les moins significatifs du résultat dans reg0 et les 32 bits les plus significatifs dans reg1.
instructionList.example.smull=SMULL R2, R7, R6, R8
instructionList.description.smlal=Multiplie le contenu (signé) de reg2 par le contenu (signé) de reg3 et l'ajoute au contenu (signé) de reg0 et reg1, les 32 bits les moins significatifs étant stockés dans reg0 et les 32 bits les plus significatifs étant stockés dans reg1.
instructionList.example.smlal=SMLAL R3, R7, R8, R9
instructionList.description.and=Effectue une opération ET bit à bit sur le contenu de reg1 et la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.and=AND R4, R2, R8\nAND R1, R2, LSL #2
instructionList.description.orr=Exécute une opération OU bit à bit sur le contenu de reg1 et la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.orr=ORR R1, R3, R9\nORR R4, R3, LSL R1
instructionList.description.eor=Effectue une opération OU exclusif bit à bit sur le contenu de reg1 et la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.eor=EOR R3, R8, R1nEOR R7, R9, LSL #2
instructionList.description.bic=Effectue une opération ET NON bit à bit sur le contenu de reg1 et la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.bic=BIC R4, R2, R8\nBIC R6, R1, LSL R3
instructionList.description.bfc=Efface les bits contigus dans le contenu de reg0. Un nombre de bits spécifié par le second immédiat (imm12) est effacé en commençant par le bit spécifié dans le premier immédiat (imm12).
instructionList.example.bfc=BFC R1, #0, #8
instructionList.description.bfi=Insère les bits contigus du contenu de reg1 dans le contenu de reg0. Un nombre de bits spécifiés par le deuxième immédiat (imm12) dans reg0, à partir du bit spécifié dans le premier immédiat (imm12), sont remplacés par des bits de reg1, à partir du bit 0.
instructionList.example.bfi=BFI R1, R2, #2, #4
instructionList.description.clz=Compte le nombre de zéros en tête dans le contenu de reg1 et stocke le résultat dans reg0.
instructionList.example.clz=CLZ R0, R2
instructionList.description.lsl=Multiplie le contenu de reg1 par une puissance de deux spécifiée par la valeur fournie (imm12 immédiat ou registre regv), en insérant des zéros dans les positions de bit vacantes, et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.lsl=LSL R1, R2, R3\nLSL R2, #2
instructionList.description.lsr=Divise le contenu (non signé) de reg1 par une puissance de deux spécifiée par la valeur fournie (imm12 immédiat ou registre regv), en insérant des zéros dans les positions de bits vacantes, et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.lsr=LSR R2, R4, R9\nLSR R4, #2
instructionList.description.asr=Divise le contenu (signé) de reg1 par une puissance de deux spécifiée par la valeur fournie (immédiat imm12 ou registre regv), en insérant le bit de signe dans les positions de bit vacantes, et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.asr=ASR R8, R6, R7\nASR R1, #6
instructionList.description.ror=Pivote la valeur du contenu de reg1 par la valeur fournie (imm12 immédiat ou registre regv), en insérant les bits qui sortent de l'extrémité droite dans les positions de bits vacantes à gauche, et stocke le résultat dans reg0 (ou reg1 s'il n'est pas fourni).
instructionList.example.ror=ROR R1, R3, R9\nROR R5, #12
instructionList.description.rrx=Décale le contenu de reg1 vers la droite d'un bit, en insérant l'ancien indicateur de retenue dans le bit 31, en insérant l'ancien bit 0 dans l'indicateur de retenue (si l'indicateur S est présent), et stocke le résultat dans reg0.
instructionList.example.rrx=RRX R2, R9
instructionList.description.cmp=Compare le contenu de reg0 avec la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) en soustrayant le second du premier, et met à jour les drapeaux de condition grâce au résultat.
instructionList.example.cmp=CMP R2, #4\nCMP R1, R3, LSL #2
instructionList.description.cmn=Compare le contenu de reg0 avec la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) en ajoutant la seconde à la première, et mise à jour des drapeaux de condition à partir du résultat.
instructionList.example.cmn=CMN R3, #6\nCMN R7, R6, LSL R1
instructionList.description.tst=Teste le contenu de reg0 par rapport à la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) en effectuant une opération ET bit à bit, et met à jour les drapeaux de condition à partir du résultat.
instructionList.example.tst=TST R1, #1\nTST R8, R3, LSL #2
instructionList.description.teq=Teste le contenu de reg0 par rapport à la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) en effectuant une opération OU exclusif bit à bit, et met à jour les drapeaux de condition à partir du résultat.
instructionList.example.teq=TEQ R8, #4\TST R2, R3, LSL R4
instructionList.description.cbz=Saute vers un label lbl (ou un nombre d'octets fourni par la valeur immédiate imm24) si le contenu de reg0 est égal à zéro.
instructionList.example.cbz=CBZ R1, LOOP\nCBZ R2, 64
instructionList.description.cbnz=Saute vers un label lbl (ou un nombre d'octets fourni par la valeur immédiate imm24) si le contenu de reg0 n'est pas égal à zéro.
instructionList.example.cbnz=CBNZ R1, LOOP\nCBNZ R2, 64
instructionList.description.mov=Stocke la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) dans reg0.
instructionList.example.mov=MOV R1, R3\nMOV R2, R8, LSL #2
instructionList.description.mvn=Stocker l'inverse bit à bit de la valeur fournie (valeur immédiate rimm8 ou registre décalé regv) dans reg0.
instructionList.example.mvn=MVN R7, R8\nMVN R8, R9, LSL R10
instructionList.description.svc=Demande une fonction au superviseur.
instructionList.example.svc=SVC 455
instructionList.description.adr=Forme une adresse relative au PC en ajoutant l'adresse d'un label lbl (ou un nombre d'octets fourni par la valeur immédiate imm24) et stocke le résultat dans reg0.
instructionList.example.adr=ADR R1, LOOP\nADR R9, 64
instructionList.description.ldr=Charge un mot/un demi-mot/un octet de la mémoire dans reg0. L'adresse peut être pré ou post décalée et indexée à l'aide d'une valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regi).
instructionList.example.ldr=LDR R1, [R2]\nLDR R9, [R1, #4]\nLDR R6, [R2, R6, LSL #2]\nLDR R1, [R2], R9, LSL R10\nLDR R1, [R2], #6\nLDR R1, =DATA
instructionList.description.str=Stocke un mot/un demi-mot/un octet de reg0 dans la mémoire. L'adresse peut être pré ou post décalée et indexée à l'aide d'une valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regi).
instructionList.example.str=STRB R1, [R2]\nSTR R9, [R1, #4]\nSTRH R6, [R2, -R6, LSL #2]\nSTR R1, [R2], -R9, LSL R10\nSTRH R1, [R2], #6
instructionList.description.stm=Stocke le contenu de plusieurs registres dans la mémoire en utilisant le contenu de reg0 comme adresse initiale.
instructionList.example.stm=STM R4, {R1, R2}\nSTMFD R6 !, {R1-R5, R7-R10}
instructionList.description.ldm=Charge le contenu de plusieurs registres depuis la mémoire en utilisant le contenu de reg0 comme adresse initiale.
instructionList.example.ldm=LDM R8, {R2, R6}\nLDMFD R8 !, {R3-R7, R9-R10}
instructionList.description.pop=Charge le contenu de plusieurs registres depuis la mémoire en utilisant le contenu de SP comme adresse initiale (mode Increment After).
instructionList.example.pop=POP {R7, R2}\nPOP {R4-R8}
instructionList.description.push=Stocke en mémoire le contenu de plusieurs registres en utilisant le contenu de SP comme adresse initiale (mode Decrement Before).
instructionList.example.push=PUSH {R1, R3}\nPUSH {R6-R10}
instructionList.description.b=Saute à un label lbl (ou à un nombre d'octets fourni par la valeur immédiate imm24).
instructionList.example.b=B LOOP\nBCC 64
instructionList.description.bl=Saute avec lien (copie l'adresse de l'instruction suivante dans LR) vers un label lbl (ou un nombre d'octets fourni par la valeur immédiate imm24).
instructionList.example.bl=BL LOOP\nBLCC 64
instructionList.description.blx=Saute avec lien (copie l'adresse de l'instruction suivante dans LR) vers une étiquette lbl (ou un nombre d'octets éloigné fourni par la valeur immédiate imm24) ou vers une adresse fournie par regb, et change le jeu d'instructions (si regb est utilisé, passe à un jeu spécifié en utilisant le bit 0 de regb).
instructionList.example.blx=BLX LOOP\nBLXCC 64\nBLX R3
instructionList.description.bx=Saute à une adresse fournie par reg0 et passe à un jeu d'instructions spécifié à l'aide du bit 0 de reg0.
instructionList.example.bx=BX R2
instructionList.description.bkpt=Provoque l'apparition d'un point d'arrêt logiciel en utilisant la valeur immédiate imm8.
instructionList.example.bkpt=BKPT #8
instructionList.description.dbg=Ne fait rien (traité comme un NOP).
instructionList.example.dbg=DBG 4
instructionList.description.nop=Ne fait rien.
instructionList.example.nop=NOP