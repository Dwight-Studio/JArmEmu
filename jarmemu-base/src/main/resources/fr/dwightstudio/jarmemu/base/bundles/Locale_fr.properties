#
#            ____           _       __    __     _____ __            ___
#           / __ \_      __(_)___ _/ /_  / /_   / ___// /___  ______/ (_)___
#          / / / / | /| / / / __ `/ __ \/ __/   \__ \/ __/ / / / __  / / __ \
#         / /_/ /| |/ |/ / / /_/ / / / / /_    ___/ / /_/ /_/ / /_/ / / /_/ /
#        /_____/ |__/|__/_/\__, /_/ /_/\__/   /____/\__/\__,_/\__,_/_/\____/
#                         /____/
#     Copyright (C) 2024 Dwight Studio
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

#### Menus ####
# File
menu.file.title=Fichier
menu.file.newFile=Nouveau fichier
menu.file.open=Ouvrir...
menu.file.saveAll=Tout enregistrer
menu.file.save=Enregistrer
menu.file.saveAs=Enregistrer sous...
menu.file.reloadAll=Tout recharger
menu.file.reload=Recharger
menu.file.closeAll=Tout fermer
menu.file.close=Fermer
menu.file.reset=Réinitialiser les paramètres
menu.file.exit=Quitter
menu.file.saveSourceFile=Enregistrer le fichier source
menu.file.openSourceFile=Ouvrir un fichier source
menu.file.formatName=Fichier Source Assembleur

# Edit
menu.edit.title=Édition
menu.edit.copy=Copier
menu.edit.cut=Couper
menu.edit.paste=Coller
menu.edit.delete=Supprimer
menu.edit.findAndReplace=Chercher & Remplacer
menu.edit.breakpoint=Basculer le Point d'arrêt

# Simulation
menu.simulation.title=Simulation
menu.simulation.simulate=Simuler
menu.simulation.stepInto=Pas à pas détaillé
menu.simulation.stepOver=Pas à pas principal
menu.simulation.continue=Continuer
menu.simulation.pause=Pause
menu.simulation.stop=Stop
menu.simulation.restart=Redémarrer

# View
menu.view.title=Affichage
menu.view.clearNotifs=Effacer les notifications

# Help
menu.help.title=Aide
menu.help.instructionList=Voir les Instructions...
menu.help.about=À propos...
menu.help.tour=Visite guidée


#### Tabs ####
# Registers
tab.registers.title=Registres
tab.registers.register=Registre
tab.registers.value=Valeur
tab.registers.flags=Drapeaux

# Stack
tab.stack.title=Pile
tab.stack.address=Adresse
tab.stack.value=Valeur

# Symbols
tab.symbols.title=Symboles
tab.symbols.file=Fichier
tab.symbols.name=Nom
tab.symbols.value=Valeur

# Labels
tab.labels.title=Étiquettes
tab.labels.file=Fichier
tab.labels.name=Nom
tab.labels.address=Adresse

# Memory Details
tab.memoryDetails.title=Détails de la mémoire
tab.memoryDetails.search=Aller à l'adresse
tab.memoryDetails.address=Adresse
tab.memoryDetails.value=Valeur
tab.memoryDetails.byte=Octet %d

# Memory Overview
tab.memoryOverview.title=Aperçu de la mémoire
tab.memoryOverview.search=Aller à l'adresse
tab.memoryOverview.address=Adresse
tab.memoryOverview.value=Valeur %d


#### Settings ####
tab.settings.title=Paramètres

# Editor
settings.editor.title=Éditeur
settings.editor.realTimeParser.title=Analyseur en Temps Réel
settings.editor.realTimeParser.description=Changer le type de colorimétrie syntaxique
settings.editor.autoCompletion.title=Auto-complétion Intelligente
settings.editor.autoCompletion.description=Activer l'auto-complétion contextuelle

# Simulation
settings.simulation.title=Simulation
settings.simulation.interval.title=Intervalle de simulation (ms)
settings.simulation.interval.description=Définir la période d'exécution en millisecondes
settings.simulation.notImplemented.title=Ignorer les instructions non implémentées
settings.simulation.notImplemented.description=Empêcher les instructions non implémentées de stopper la simulation
settings.simulation.deprecated.title=Ignorer les instructions dépréciées
settings.simulation.deprecated.description=Empêcher les instructions dépréciées de stopper la simulation

# Automatic breakpoints
settings.breakpoints.title=Points d'arrêt
settings.breakpoints.manualBreakpoints.title=Points d'arrêt manuels
settings.breakpoints.manualBreakpoints.description=Activer les points d'arrêt ajoutés par l'utilisateur
settings.breakpoints.codeBreakpoints.title=Points d'arrêt du code
settings.breakpoints.codeBreakpoints.description=Activer les points d'arrêt déclenchés par instruction (BKPT)
settings.breakpoints.autoBreakpoints.title=Points d'arrêt automatiques
settings.breakpoints.autoBreakpoints.description=Activer les points d'arrêt automatiques demandés par le simulateur
settings.breakpoints.memoryAlign=Accès à la mémoire mal aligné
settings.breakpoints.stackAlign=Pointeur de la pile désaligné
settings.breakpoints.programAlign=Compteur de programme mal aligné
settings.breakpoints.nesting=Récursivité trop profonde
settings.breakpoints.readOnly=Écrasement de données en lecture seule

# Data management
settings.dataManagement.title=Gestion des données
settings.dataManagement.stackAddress.title=Adresse de la pile (Hex)
settings.dataManagement.stackAddress.description=Définir l'emplacement de la pile dans la mémoire
settings.dataManagement.programAddress.title=Adresse du program (Hex)
settings.dataManagement.programAddress.description=Définir l'emplacement du programme dans la mémoire
settings.dataManagement.dataFormat.title=Format d'affichage des données
settings.dataManagement.dataFormat.description=Définir le format de visualisation des données (registres, mémoire...)
settings.dataManagement.hexadecimal=Héxadécimal (par défaut)
settings.dataManagement.signedDecimal=Décimal Signé
settings.dataManagement.unsignedDecimal=Décimal Non Signé
settings.dataManagement.follow.title=Suivre SP dans la pile
settings.dataManagement.follow.description=Activer le défilement automatique pour suivre SP dans la pile
settings.dataManagement.highlight.title=Surligner les mises à jour
settings.dataManagement.highlight.description=Activer le surlignage des données mises à jour dans la visualisation des données (registres, mémoire...)

# Appearance
settings.appearance.title=Apparence
settings.appearance.themeFamily.title=Famille thématique
settings.appearance.themeFamily.description=Définir la famille thématique de l'interface
settings.appearance.themeVariation.title=Variation du thème
settings.appearance.themeVariation.description=Définir la variation du thème de l'interface
settings.appearance.dark=Sombre
settings.appearance.light=Clair
settings.appearance.maxNotification.title=Nombre max de notifications
settings.appearance.maxNotification.description=Définir le nombre maximum de notifications sur l'éditeur


#### Pop ####

# Memory hint
pop.memoryHint.title=Recherche dans la mémoire
pop.memoryHint.message=Vous pouvez chercher dans la mémoire en utilisant plusieurs formats d'adresses :\n\t%1$s Nombre signé décimal (e.g. -1842)\n\t%1$s Nombre héxadécimal (e.g. 0x01FF)\n\t%1$s Nombre binaire (e.g. 0b1001)\n\t%1$s Constante définie (e.g N)\n\t%1$s Donnée définie (e.g. data1)\n\t%1$s Label défini (e.g. loop)\n\t%1$s Expression mathématique (e.g (N*4)+0xFF)

# Autocompletion
pop.autocomplete.title=Smart Autocompletion

# Find & Replace
pop.find.find=Trouver
pop.find.replace=Remplacer
pop.find.replaceAll=Tout Remplacer
pop.find.caseSensitivity=Correspondance de la Casse
pop.find.word=Mots
pop.find.regex=Expressions Régulières


#### Notifications ####

# Parsing
notification.parsing.title=Analyse du code en cours...
notification.parsing.message=Merci de patienter, cela peut prendre quelques secondes.

# Parsing error
notification.parsingError.title=Erreur lors de l'analyse du code
notification.parsingError.message=Des erreurs ont empêché le code d'être analysé correctement. Regardez la console pour plus de détails.

# No instruction error
notification.noInstruction.title=Erreur lors de la simulation
notification.noInstruction.message=Aucune instruction détectée (avez-vous oublié le '.text' ?).

# Exception in code
notification.exception.fileAndLine=%s à la ligne %d (%s)
notification.exception.line=%s à la ligne %d (Fichier inconnu)
notification.exception.nothing=%s

# Automatic breakpoint
notification.autoBreakpoint.title=Point d'arrêt automatique
notification.autoBreakpoint.message=Vous pouvez désactiver les points d'arrêts automatiques dans les paramètres.

# Simulator breakpoint
notification.simulatorBreakpoint.title=Le simulateur a requis un point d'arrêt
notification.simulatorBreakpoint.memoryAccessMessage=Tentative d'accès à une adresse mémoire mal aligné.
notification.simulatorBreakpoint.readOnlyMessage=Écrasement de données en lecture seule.
notification.simulatorBreakpoint.programCounterMessage=Compteur de programme mal aligné.
notification.simulatorBreakpoint.stackPointerMessage=Pointeur de la pile désaligné.
notification.simulatorBreakpoint.nestingMessage=Récursivité trop profonde (>1000 branches).

# Software interrupt
notification.softwareInterrupt.title=Interruption logiciel
notification.softwareInterrupt.message=Le programme a requis une interruption avec le code %s.

# Catch point
notification.catchPoint.title=Terminé
notification.catchPoint.message=Le programme a atteint un point de capture.

# End of file
notification.eof.title=Terminé
notification.eof.message=Le programme a atteint la fin du fichier.

# Manual breakpoint
notification.manualBreakpoint.title=Point d'arrêt
notification.manualBreakpoint.message=Le programme a atteint un point d'arrêt, son exécution est en pause.

# Ignored manual breakpoint
notification.ignoredManualBreakpoint.title=Point d'arrêt
notification.ignoredManualBreakpoint.message=Le programme a atteint un point d'arrêt, mais a été ignoré par les paramètres actuels.

# Code breakpoint
notification.codeBreakpoint.title=Le code a requis un point d'arrêt
notification.codeBreakpoint.message=Avec la valeur %d.

# Ignored code breakpoint
notification.ignoredCodeBreakpoint.title=Le code a requis un point d'arrêt
notification.ignoredCodeBreakpoint.message=Avec la valeur %d, mais a été ignoré par les paramètres actuels.

# Outdated client
notification.outdated.title=Client obsolète (v%s -> v%s)
notification.outdated.message=Une nouvelle version de JArmEmu est disponible ! Mettez à jour dès maintenant pour profiter de toutes les nouvelles fonctionnalités.
notification.outdated.download=Télécharger
notification.outdated.dontShowAgain=Ne pas me le rappeler


#### Exceptions ####
exception.base=Erreur
exception.syntax=Erreur de syntaxe
exception.argument=Mauvais argument
exception.notImplemented=Non implémenté
exception.deprecated=Déprécation

exception.argument.unexpectedArgument=Argument '%s' inattendu
exception.argument.missingRegister=Registre manquant
exception.argument.unknownRegister=Registre '%s' inconnu
exception.argument.invalidRegister=Registre '%s' invalide
exception.argument.overflowingValue=Valeur immédiate de 12bits '%s' débordante
exception.argument.illegalPseudo=Utilisation illégale de Pseudo-Instruction '%s'
exception.argument.unprocessedPseudo=Détection d'une Pseudo-Instruction non traitée
exception.argument.invalidValue=Valeur immédiate de 12bits '%s' invalide
exception.argument.missingValue=Valeur immédiate manquante (12bits)
exception.argument.overflowingRotatedValue=Valeur immédiate pivotée de 8bits '%s' débordante
exception.argument.invalidRotatedValue=Valeur immédiate pivotée de 8bits '%s' invalide
exception.argument.missingRotatedValue=Valeur immédiate manquante (8bits pivotée)
exception.argument.shift0to31=Valeur de décalage '%s' invalide, la valeur doit être comprise entre 0 et 31 inclus
exception.argument.shift1to32=Valeur de décalage '%s' invalide, la valeur doit être comprise entre 1 et 32 inclus
exception.argument.shift1to31=Valeur de décalage '%s' invalide, la valeur doit être comprise entre 1 et 31 inclus
exception.argument.invalidShift=Valeur de décalage '%s' invalide
exception.argument.missingRegisterAddress=Adresse (depuis un registre) manquante
exception.argument.invalidAddressRegister=Adresse (depuis un registre) '%s' invalide
exception.argument.missingLabel=Identifieur de label ou valeur immédiate manquant
exception.argument.unknownLabel=Label '%s' inconnu (est-ce défini dans ce fichier?) ou expression mathématique malformée (%s)
exception.argument.missingRegisterArray=Liste de registre manquante
exception.argument.unexpectedArgumentRegisterArray=Valeur '%s' inattendu (liste de registre attendue)
exception.argument.emptyArgumentRegisterArray=Liste de registres '%s' invalide
exception.argument.overflowArgumentRegisterArray=Liste de registres '%s' débordante
exception.argument.invalidAddress=Adresse '%s' invalide
exception.argument.missingAddress=Adresse manquante
exception.argument.registerShift=Impossible d'effectuer le shift sur une valeur immédiate
exception.argument.missingRegisterOrImmediate=Registre ou valeur immédiate manquante
exception.argument.missingRegisterOrRotated=Registre ou valeur immédiate manquante (8bits pivotée)
exception.argument.missingShift=Décalage manquant

exception.instruction.firstArgBF=Le premier argument doit être compris entre 0 et 31 (inclus)
exception.instruction.secondArgBF=Le second argument doit être compris entre 0 et 32 moins le premier argument (inclus)
exception.instruction.illegalSFlag=Utilisation interdite du drapeau S flag (non utilisable avec cette instruction)
exception.instruction.labelAlreadyDefined=Label '%s' déjà défini
exception.instruction.deprecated=L'instruction %s est obsolète
exception.instruction.notImplemented=L'instruction %s n'est pas (encore) implémentée
exception.instruction.coprocessor=Les instructions utilisant les coprocesseurs ne sont pas implémentées
exception.instruction.wrongVersion=%s n'est pas disponible pour ARMv7
exception.instruction.missingUpdateMode=Mode de mise à jour manquant
exception.instruction.debug=DBG s'exécute comme NOP
exception.instruction.indexing=La pré-indexation et la post-indexation ne sont pas cumulables
exception.instruction.halfword=Le modifier H n'est pas disponible pour cette instruction
exception.instruction.shifting=Impossible de shift pour cette instruction avec ces modifiers

exception.directive.illegalDataInitialization=Initialisation illégale de données (%s dans %s)
exception.directive.invalidArgument=Argument '%s' invalide (pour %s)
exception.directive.overflowingByteValue=Valeur d'octet '%s' débordante
exception.directive.overflowingHalfValue=Valeur de demi-mot '%s' débordante
exception.directive.invalidSymbolName=Nom de symbole '%s' invalide
exception.directive.invalidValueSize=Taille de la valeur '%s' invalide (doit être positive)

exception.parser.unexpectedStatement=Déclaration '%s' inattendue
exception.parser.unknownSection=Section '%s' inconnue
exception.parser.unknownDirective=Directive '%s' inconnue
exception.parser.unknownInstruction=Instruction '%s' inconnue
exception.parser.unknownModifier=Modificateur '%s' inconnu (%s attendu)
exception.parser.unexpectedModifier=Modificateur '%s' inattendu

exception.math.malformed=Expression mathématique '%s' malformée (%s)


#### Status ####
status.initializing=Initialisation
status.editing=Édition
status.simulating=Simulation
status.error=Erreur


#### Dialogs  ####

# Warning
dialog.warning.title=Attention
dialog.warning.confirm=Confirmer

# Unsaved
dialog.unsaved.title=Attention
dialog.unsaved.message=Le fichier ouvert contient des modifications non enregistrées. Ces modifications seront perdues si vous continuez sans enregistrer.\n\nVoulez-vous enregistrer le fichier ?
dialog.unsaved.save=Sauvegarder et continuer
dialog.unsaved.discard=Ignorer et continuer
dialog.unsaved.cancel=Annuler

# Simulation interval warning
dialog.simulationInterval.message=Le réglage de l'intervalle de simulation en dessous de %dms désactive la mise à jour systématique de l'interface graphique afin d'éviter les problèmes avec le front-end. Il est possible que des étapes soient sautées (il s'agit d'un simple effet visuel, le back-end fonctionnant toujours comme d'habitude).

# Disable notification warning
dialog.maxNotification.message=Le réglage du nombre max de notification sur zéro désactive les notifications. Nous vous recommandons vivement de l'activer pour utiliser correctement le simulateur et déboguer correctement votre code.

#### About ####

# Website
about.website.title=Site internet

# Licence
about.licence.title=License

# Credits
about.credits.title=Crédits
about.credits.message=JArmEmu est un projet du collectif Dwight Studio.\nDirigé par Tollemer Kévin et Leconte Alexandre.\n\nJArmEmu se base sur le travail des projets suivants :\nJavafx par OpenJFX (GNU Public License)\nIkonli par Andres Almiray (Apache License 2.0)\nRichTextFX par Tomas Mikula (BSD 2-Clause "Simplified" License)\nAtlantaFX par mkpaz (MIT License)


#### Popup ####
tour.firstpopup.title=Ceci est le premier Titre
tour.firstpopup.message=Ceci est le premier Message
tour.secondpopup.title=Ceci est le deuxième Titre
tour.secondpopup.message=Ceci est le deuxième Message
tour.thirdpopup.title=Ceci est le troisième Titre
tour.thirdpopup.message=Ceci est le troisième Message

#### Instruction List ####

instructionList.title=Instructions implémentées

# Table
instructionList.table.name=Nom
instructionList.table.usage=Utilisation
instructionList.table.description=Description
instructionList.table.flag=Drapeau

# Detail
instructionList.detail.title=%s en détails
instructionList.detail.example=Ouvrir l'exemple...
instructionList.detail.exampleContent=@ --- Exemple de %s ---\n%s\n@ --- Fin de l'Exemple ---
instructionList.detail.condition= - Condition d'exécution
instructionList.detail.value=Valeur
instructionList.detail.shift= - Décalage
instructionList.detail.address= - Adresse

# Instruction
instructionList.description.all=Tout ce qui se trouve entre chevrons (<omis>) peut être omis. Le comportement adopté est précisé dans le détail de chaque instruction/argument.
instructionList.description.add=Additionne (sans retenue) la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) au contenu de reg1 et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.sub=Soustrait (sans retenue) la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) au contenu de reg1 et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.rsb=Soustrait (sans retenue) le contenu de reg1 à la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.adc=Additionne (avec retenue) la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) au contenu de reg1 et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.sbc=Soustrait (avec retenue) la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) au contenu de reg1 et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.rsc=Soustrait (avec retenue) le contenu de reg1 à la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.mul=Multiplie le contenu de reg1 par le contenu de reg2 et stocke les 32 bits les moins significatifs du résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.mla=Multiplie le contenu de reg1 par le contenu de reg2, ajoute la valeur de reg3 et stocke les 32 bits les moins significatifs du résultat dans reg0.
instructionList.description.mls=Multiplie le contenu de reg1 par le contenu de reg2, soustrait le résultat au contenu de reg3 et stocke les 32 bits les moins significatifs du résultat dans reg0.
instructionList.description.umull=Multiplie le contenu (non signé) de reg2 par le contenu (non signé) de reg3 et stocke les 32 bits les moins significatifs du résultat dans reg0 et les 32 bits les plus significatifs dans reg1.
instructionList.description.umlal=Multiplie le contenu (non signé) de reg2 par le contenu (non signé) de reg3 et l'ajoute au contenu (non signé) de reg0 et reg1 où les 32 bits les moins significatifs sont stockés dans reg0 et les 32 bits les plus significatifs sont stockés dans reg1.
instructionList.description.smull=Multiplie le contenu (signé) de reg2 par le contenu (signé) de reg3 et stocke les 32 bits les moins significatifs du résultat dans reg0 et les 32 bits les plus significatifs dans reg1.
instructionList.description.smlal=Multiplie le contenu (signé) de reg2 par le contenu (signé) de reg3 et l'ajoute au contenu (signé) de reg0 et reg1, les 32 bits les moins significatifs étant stockés dans reg0 et les 32 bits les plus significatifs étant stockés dans reg1.
instructionList.description.and=Effectue une opération ET bit à bit sur le contenu de reg1 et la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.orr=Exécute une opération OU bit à bit sur le contenu de reg1 et la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.eor=Effectue une opération OU exclusif bit à bit sur le contenu de reg1 et la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.bic=Effectue une opération ET NON bit à bit sur le contenu de reg1 et la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.bfc=Efface les bits contigus dans le contenu de reg0. Un nombre de bits spécifié par le second immédiat (imm12) est effacé en commençant par le bit spécifié dans le premier immédiat (imm12).
instructionList.description.bfi=Insère les bits contigus du contenu de reg1 dans le contenu de reg0. Un nombre de bits spécifiés par le deuxième immédiat (imm12) dans reg0, à partir du bit spécifié dans le premier immédiat (imm12), sont remplacés par des bits de reg1, à partir du bit 0.
instructionList.description.clz=Compte le nombre de zéros en tête dans le contenu de reg1 et stocke le résultat dans reg0.
instructionList.description.lsl=Multiplie le contenu de reg1 par une puissance de deux spécifiée par la valeur fournie (immédiat imm12 ou registre regv), en insérant des zéros dans les positions de bit vacantes, et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.lsr=Divise le contenu (non signé) de reg1 par une puissance de deux spécifiée par la valeur fournie (immédiat imm12 ou registre regv), en insérant des zéros dans les positions de bits vacantes, et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.asr=Divise le contenu (signé) de reg1 par une puissance de deux spécifiée par la valeur fournie (immédiat imm12 ou registre regv), en insérant le bit de signe dans les positions de bit vacantes, et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.ror=Pivote la valeur du contenu de reg1 par la valeur fournie (immédiat imm12 ou registre regv), en insérant les bits qui sortent de l'extrémité droite dans les positions de bits vacantes à gauche, et stocke le résultat dans reg0 (ou reg1 si reg0 est omis).
instructionList.description.rrx=Décale le contenu de reg1 vers la droite d'un bit, en insérant l'ancien indicateur de retenue dans le bit 31, en insérant l'ancien bit 0 dans l'indicateur de retenue (si l'indicateur S est présent), et stocke le résultat dans reg0.
instructionList.description.cmp=Compare le contenu de reg0 avec la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) en soustrayant le second du premier, et met à jour les drapeaux de condition grâce au résultat.
instructionList.description.cmn=Compare le contenu de reg0 avec la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) en ajoutant la seconde à la première, et mise à jour des drapeaux de condition à partir du résultat.
instructionList.description.tst=Teste le contenu de reg0 par rapport à la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) en effectuant une opération ET bit à bit, et met à jour les drapeaux de condition à partir du résultat.
instructionList.description.teq=Teste le contenu de reg0 par rapport à la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) en effectuant une opération OU exclusif bit à bit, et met à jour les drapeaux de condition à partir du résultat.
instructionList.description.cbz=Saute vers un label lbl (ou vers une adresse fournie par la valeur immédiate imm24) si le contenu de reg0 est égal à zéro.
instructionList.description.cbnz=Saute vers un label lbl (ou vers une adresse fournie par la valeur immédiate imm24) si le contenu de reg0 n'est pas égal à zéro.
instructionList.description.mov=Stocke la valeur fournie (valeur immédiate pivotée rimm8 ou registre décalé regv) dans reg0.
instructionList.description.mvn=Stocker l'inverse bit à bit de la valeur fournie (valeur immédiate rimm8 ou registre décalé regv) dans reg0.
instructionList.description.svc=Demande une fonction au superviseur.
instructionList.description.adr=Forme une adresse relative au PC en ajoutant l'adresse d'un label lbl (ou vers une adresse fournie par la valeur immédiate imm24) et stocke le résultat dans reg0.
instructionList.description.ldr=Charge un mot/un demi-mot/un octet de la mémoire à l'adresse [adr] dans reg0.
instructionList.description.str=Stocke un mot/un demi-mot/un octet depuis reg0 dans la mémoire à l'adresse [adr].
instructionList.description.stm=Stocke le contenu de plusieurs registres dans la mémoire en utilisant le contenu de reg0 comme adresse initiale.
instructionList.description.ldm=Charge le contenu de plusieurs registres depuis la mémoire en utilisant le contenu de reg0 comme adresse initiale.
instructionList.description.pop=Charge le contenu de plusieurs registres depuis la mémoire en utilisant le contenu de SP comme adresse initiale (mode Increment After).
instructionList.description.push=Stocke en mémoire le contenu de plusieurs registres en utilisant le contenu de SP comme adresse initiale (mode Decrement Before).
instructionList.description.b=Saute à un label lbl (ou à un nombre d'octets fourni par la valeur immédiate imm24).
instructionList.description.bl=Saute avec lien (copie l'adresse de l'instruction suivante dans LR) vers un label lbl (ou vers une adresse fournie par la valeur immédiate imm24).
instructionList.description.blx=Saute avec lien (copie l'adresse de l'instruction suivante dans LR) vers une étiquette lbl (ou vers une adresse fournie par la valeur immédiate imm24) ou vers une adresse fournie par regb, et change le jeu d'instructions (si regb est utilisé, passe à un jeu spécifié en utilisant le bit 0 de regb).
instructionList.description.bx=Saute à une adresse fournie par reg0 et passe à un jeu d'instructions spécifié à l'aide du bit 0 de reg0.
instructionList.description.bkpt=Provoque l'apparition d'un point d'arrêt logiciel en utilisant la valeur immédiate imm8.
instructionList.description.dbg=Ne fait rien (traité comme un NOP).
instructionList.description.nop=Ne fait rien.
instructionList.example.nop=NOP

# Condition
instructionList.description.eq=Égal
instructionList.description.ne=Non égal
instructionList.description.cs=Retenue activée
instructionList.description.hs=Alias pour Retenue activée (CS)
instructionList.description.cc=Retenue désactivée
instructionList.description.lo=Alias pour Retenue désactivée (CC)
instructionList.description.mi=Négatif
instructionList.description.pl=Positif ou zéro
instructionList.description.vs=Débordement
instructionList.description.vc=Pas de débordement
instructionList.description.hi=Supérieur non signé
instructionList.description.ls=Inférieur ou égal
instructionList.description.ge=Signé supérieur ou égal
instructionList.description.lt=Signé inférieur
instructionList.description.gt=Signe supérieur
instructionList.description.le=Signé inférieur ou égal
instructionList.description.al=Toujours (peut être <omis>)

# Value
instructionList.description.imm=Valeur immédiate sur %d bits
instructionList.description.rimm=Valeur immédiate pivotée sur %d bits
instructionList.description.rego=Registre de destination (peut être <omis> parfois)
instructionList.description.regv=Valeur fournie par registre
instructionList.description.rega=Adresse fournie par registre
instructionList.description.regs=Décalage fourni par registre
instructionList.description.regn=Liste de registre (i.e. {reg0, reg1, ...}) et/ou plage de registres (i.e. {reg0-reg1, ...})
instructionList.description.reg=Registre (l'utilisation de PC est autorisé, mais déprécié)
instructionList.description.lbl=Nom de label

# Shift
instructionList.description.lslShift=Multiplie le contenu du registre décalé par une puissance de deux spécifiée par la valeur fournie (immédiat imm5 ou registre regs), en insérant des zéros dans les positions de bit vacantes.
instructionList.description.lsrShift=Divise le contenu (non signé) du registre décalé par une puissance de deux spécifiée par la valeur fournie (immédiat imm5 ou registre regs), en insérant des zéros dans les positions de bits vacantes.
instructionList.description.asrShift=Divise le contenu (signé) du registre décalé par une puissance de deux spécifiée par la valeur fournie (immédiat imm5 ou registre regs), en insérant le bit de signe dans les positions de bit vacantes.
instructionList.description.rorShift=Pivote la valeur du contenu du registre décalé par la valeur fournie (immédiat imm5 ou registre regs), en insérant les bits qui sortent de l'extrémité droite dans les positions de bits vacantes à gauche.
instructionList.description.rrxShift=Décale le contenu du registre décalé vers la droite d'un bit, en insérant l'ancien indicateur de retenue dans le bit 31 et l'ancien bit 0 dans l'indicateur de retenue (si l'indicateur S est présent, uniquement pour MOV).

# Address
instructionList.description.adrReg=Accéder à la mémoire à l'adresse stockée dans rega.
instructionList.description.adrRegImm=Accéder à la mémoire à l'adresse stockée dans rega, offset par la valeur immédiate imm12.
instructionList.description.adrRegReg=Accéder à la mémoire à l'adresse stockée dans rega, offset par law valeur signée du registre regi.
instructionList.description.adrRegRegSht=Accède à la mémoire à l'adresse stockée dans rega, offset par la valeur signée du registre regi décalée par la valeur fournie (valeur immédiate imm5 ou registre regs).
instructionList.description.adrRegImmU=Mettre à jour rega en ajoutant la valeur immédiate imm12 à sa valeur, avant d'accéder à la mémoire à l'adresse correspondant à la nouvelle valeur de rega.
instructionList.description.adrRegRegU=Mettre à jour rega en ajoutant la valeur du registre signé regi à sa valeur, avant d'accéder à la mémoire à l'adresse correspondant à la nouvelle valeur de rega.
instructionList.description.adrRegRegShtU=Mettre à jour rega en ajoutant la valeur signée du registre regi décalée par la valeur fournie (valeur immédiate imm5 ou registre regs) à sa valeur, avant d'accéder à la mémoire à l'adresse correspondant à la nouvelle valeur de rega.
instructionList.description.adrRegImmP=Accéder à la mémoire à l'adresse stockée dans rega, puis mettre à jour rega en ajoutant la valeur immédiate imm12 à sa valeur.
instructionList.description.adrRegRegP=Accéder à la mémoire à l'adresse stockée dans rega, puis mettre à jour rega en ajoutant la valeur signé du registre regi à sa valeur.
instructionList.description.adrRegRegShtP=Accéder à la mémoire à l'adresse stockée dans rega, puis mettre à jour rega en ajoutant la valeur signée du registre regi décalée de la valeur fournie (valeur immédiate imm5 ou registre regs) à sa valeur.
instructionList.description.adrPseudo=(Pseudo instruction) Au lieu d'accéder à la mémoire, stocke l'adresse d'un symbole dans reg0.